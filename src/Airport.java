import java.util.ArrayList;

public class Airport
{
    /** A list of the flights into and out of this airport
     *  Guaranteed not to be null and to contain only non-null entries
     */
    private ArrayList<Flight> allFlights;

    public Airport(ArrayList<Flight> flights)
    {
        allFlights = flights;
    }

    public ArrayList<Flight> getAllFlights()
    {
        return allFlights;
    }

    /** Returns the revenue generated by all flights at the airport,
     *  as described in part (a)
     */
    public double getTotalRevenue() {
        double revenue = 0.0;
        for (Flight fl : allFlights) {
            if (fl.getNumPassengers() > fl.getCapacity()) {
                revenue += fl.getPrice() * fl.getCapacity();
            } else {
                revenue += fl.getPrice() * fl.getNumPassengers();
            }
        }
        return revenue;
    }

    /** Updates the list of flights by removing certain flights and
     *  returns the total number of passengers whose flights were removed,
     *  as described in part (b)
     */
    public int updateFlights() {
        int count = 0;
        for (int i = 0; i < allFlights.size(); i++) {
            Flight temp = allFlights.get(i);
            if (temp.getNumPassengers() < (int) (temp.getCapacity() * 0.2)) {
                count += temp.getNumPassengers();
                allFlights.remove(i);
                i--;
            }
        }
        return count;
    }
}
